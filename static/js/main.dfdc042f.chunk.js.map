{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","commentsList","isNotEmptyArray","length","title","PostList","posts","updatedPosts","postsFromServer","postId","commentsFromServer","filter","commentSearched","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"sx8IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SAAoCD,EAAQK,WCfnCC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KACR,SAAAR,GAAO,OACL,cAAC,EAAD,CAEEA,QAASA,GADJA,EAAQS,UCPVC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAAKP,OAA7C,SACGO,EAAKT,QCCGU,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAeD,EAAKN,SACpBQ,EAAkBD,EAAaE,OAAS,EAE9C,OACE,sBAAKf,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCY,EAAKI,QAEtC,8BACG,aAED,cAAC,EAAD,CAAUN,KAAME,EAAKF,aAIzB,mBAAGV,UAAU,iBAAb,SAA+BY,EAAKR,OAEnCU,EACC,cAAC,EAAD,CAAaR,SAAUO,IAIvB,mBAAG,UAAQ,oBAAX,iCCxBKI,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKlB,UAAU,WAAf,SACGkB,EAAMX,KACL,SAAAK,GAAI,OACF,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKJ,UCSpB,IAAMW,EAAeC,EAAgBb,KACnC,SAAAK,GAAI,kCACCA,GADD,IAEFN,UATsBe,EASKT,EAAKJ,GAR3Bc,EAAmBC,QACxB,SAAAC,GAAe,OAAIA,EAAgBH,SAAWA,MAQ9CX,MAdiBe,EAcCb,EAAKa,OAblBC,EAAgBC,MAAK,SAAAjB,GAAI,OAAIA,EAAKF,KAAOiB,MAAW,QAD7D,IAAqBA,EAIKJ,KAcbO,EAAM,kBACjB,0BAAS5B,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUkB,MAAOC,QCzBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dfdc042f.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{comment.body}</div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(\n      comment => (\n        <CommentInfo\n          key={comment.id}\n          comment={comment}\n        />\n      ),\n    )}\n  </div>\n);\n","export const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const commentsList = post.comments;\n  const isNotEmptyArray = commentsList.length > 0;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n        <p>\n          {'Posted by '}\n\n          <UserInfo user={post.user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">{post.body}</p>\n\n      {isNotEmptyArray ? (\n        <CommentList comments={commentsList} />\n      ) : (\n\n      // <hr />\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n\n      )}\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(\n      post => (\n        <PostInfo\n          post={post}\n          key={post.id}\n        />\n      ),\n    )\n    }\n  </div>\n);\n","import postsFromServer from './api/posts.json';\nimport usersFromServer from './api/users.json';\nimport commentsFromServer from './api/comments.json';\n\nimport './App.scss';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction filteredComments(postId) {\n  return commentsFromServer.filter(\n    commentSearched => commentSearched.postId === postId,\n  );\n}\n\nconst updatedPosts = postsFromServer.map(\n  post => ({\n    ...post,\n    comments: filteredComments(post.id),\n    user: getUserById(post.userId),\n  }),\n);\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={updatedPosts} />\n\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}